<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:if="http://developer.bingosoft.net/schema/sso/condition"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
	http://developer.bingosoft.net/schema/sso/condition http://developer.bingosoft.net/schema/condition-1.0.xsd">

	<import if:test="runtime.login_log_enable=='true'" resource="../../sso-plugin/sso-plugin-loginlog.xml"/>
	<import if:test="runtime.user_mode.contains('ad')" resource="../../sso-plugin/sso-plugin-ntlm.xml"/>
	<import if:test="runtime.user_mode.contains('ldap')" resource="../../sso-plugin/sso-plugin-ldap.xml"/>
	<import if:test="runtime.ticket_mode=='db'" resource="../../sso-plugin/sso-plugin-registry-db.xml"/>
	<import if:test="runtime.ticket_mode=='mem'" resource="../../sso-plugin/sso-plugin-registry.xml"/>
	<import if:test="runtime.sso_connect_enable=='true'" resource="../../sso-plugin/sso-plugin-ssoconnector.xml"/>
	<import if:test="runtime.rm_enable=='true'" resource="../../sso-plugin/sso-plugin-remote-app.xml"/>
	<import if:test="runtime.use_domain=='true'" resource="../../sso-plugin/sso-plugin-domain.xml"/>
	<import if:test="runtime.weixin_login=='true'" resource="../../sso-plugin/sso-plugin-weixin.xml"/>
	<import resource="../../sso-plugin/sso-plugin-qrcode.xml"/>

	<bean id="singleSignOnManager" class="bingo.sso.core.SingleSignOnManager"
        p:config-ref="singleSignOnConfig"
        p:webLoginHandlers-ref="web.loginHandlers"
        p:desktopLoginHandlers-ref="desktop.loginHandlers"
        p:webLogoutHandlers-ref="web.logoutHandlers"
        p:desktopLogoutHandlers-ref="desktop.logoutHandlers"
        p:checkAuthenticationHandlers-ref="checkAuthenticationHandlers"
        p:logoutUrlManager-ref="logoutUrlManager"
        p:exceptionHandlers-ref="exceptionHandlers"
        p:centralTicketService-ref="centralTicketService"
        p:clientHostManager-ref="clientHostManager"
        p:loginPathManager-ref="loginPathManager"
        p:singleSignOnContinueable-ref="singleSignOnContinueable"
        p:sessionInvalidateHandler-ref="sessionInvalidateHandler"
        p:credentialsManager-ref="credentialsManager"
        p:authenticationManager-ref="sso.authenticationManager"
        p:authenticationHandlers-ref="authenticationHandlers"
        p:credentialsResolverMappers-ref="credentialsResolverMappers"
        p:themeManager-ref="themeManager">
        <property if:test="runtime.spec_secret_enable=='true'" name="appSpecifiedSecretManager" ref="appSpecifiedSecretManager" />
        <property if:test="runtime.validate_return_url=='true'" name="singleSignOnUrlValidator" ref="singleSignOnUrlValidator" />
        <property if:test="runtime.validate_return_url=='true'" name="serverSignOnUrlValidator" ref="serverSignOnUrlValidator" />
    </bean>

    <!-- SSO Theme config -->
    <bean id="themeManager" class="bingo.sso.core.theme.ThemeManager"
    	p:defaultTheme="${runtime.theme}"
    	p:rules-ref="themeRules">
    </bean>
    <!-- 根据参数：openid.return_to值确定使用登录主题 -->
    <util:list id="themeRules">
    	<bean class="bingo.sso.core.theme.UrlRegexRule" p:theme="co3" p:urlRegex="link\.bingosoft\.net"/>
    </util:list>

    <!-- single sign on config -->
    <bean id="singleSignOnConfig" class="bingo.sso.core.SingleSignOnConfig">
        <!-- ntlm:Window集成认证  form:Form验证-->
        <property name="defaultAuthType" value="${runtime.default_auth_type}" />
    </bean>

    <util:list id="credentialsResolverMappers">
        <bean class="bingo.sso.core.authentication.CredentialsResolverMapper"
        	p:singleSignOnTypes="desktop"
            p:singleSignOnActionTypes="grantLoginTicket"
            p:credentialsResolver-ref="assertionCredentialsResolver"/>
        <bean class="bingo.sso.core.authentication.CredentialsResolverMapper"
        	p:singleSignOnTypes="desktop"
            p:singleSignOnActionTypes="grantAppSpecifiedSecret"
            p:credentialsResolver-ref="authorizationCodeCredentialsResolver"/>
        <bean if:test="runtime.spec_secret_enable=='true'" class="bingo.sso.core.authentication.CredentialsResolverMapper"
        	p:singleSignOnTypes="desktop"
            p:singleSignOnActionTypes="login,grantLoginTicket,refreshTicketGrantingTicket"
            p:credentialsResolver-ref="appSpecifiedSecretCredentialsResolver"/>
        <bean class="bingo.sso.core.authentication.CredentialsResolverMapper"
        	p:singleSignOnTypes="web,desktop"
            p:singleSignOnActionTypes="login"
            p:credentialsResolver-ref="loginTicketCredentialsResolver"/>
        <bean class="bingo.sso.core.authentication.CredentialsResolverMapper"
        	p:singleSignOnTypes="web"
            p:singleSignOnActionTypes="login,grantAppSpecifiedSecret"
            p:credentialsResolver-ref="loginFormCredentialsResolver"/>
		<bean if:test="runtime.desktop_password_enable=='true'" class="bingo.sso.core.authentication.CredentialsResolverMapper"
        	p:singleSignOnTypes="desktop"
            p:singleSignOnActionTypes="login,grantAppSpecifiedSecret"
            p:credentialsResolver-ref="loginFormCredentialsResolver"/>

        <bean class="bingo.sso.core.authentication.CredentialsResolverMapper"
        	p:singleSignOnTypes="web"
            p:singleSignOnActionTypes="login"
            p:credentialsResolver-ref="jwtCredentialsResolver"/>
		<bean if:test="runtime.desktop_password_enable=='true'" class="bingo.sso.core.authentication.CredentialsResolverMapper"
        	p:singleSignOnTypes="desktop"
            p:singleSignOnActionTypes="login"
            p:credentialsResolver-ref="jwtCredentialsResolver"/>

        <bean if:test="runtime.weixin_login=='true'" class="bingo.sso.core.authentication.CredentialsResolverMapper"
        	p:singleSignOnTypes="web"
            p:singleSignOnActionTypes="login"
            p:credentialsResolver-ref="weiXinCredentialsResolver"/>
	</util:list>
	<util:list id="authenticationHandlers">
		<ref bean="jdbcAuthenticationHandler" if:test="runtime.user_mode.contains('db')"/>
		<ref bean="ntlmAuthenticationHandler" if:test="runtime.user_mode.contains('ad')"/>
		<ref bean="ldapAuthenticationHandler" if:test="runtime.user_mode.contains('ldap')"/>
		<ref bean="jwtAuthenticationHandler"/>
        <ref bean="loginTicketAuthenticationHandler"/>
        <ref bean="weiXinAuthenticationHandler" if:test="runtime.weixin_login=='true'"/>
        <ref bean="appSpecifiedSecretAuthenticationHandler" if:test="runtime.spec_secret_enable=='true'"/>
        <ref bean="authorizationCodeAuthenticationHandler"/>
        <ref bean="assertionAuthenticationHandler"/>
	</util:list>
	<util:list id="principalValidators">
		<bean if:test="runtime.user_mode.contains('ad')" class="bingo.sso.plugin.ntlm.PrincipalValidator" p:supportAuthType="spec_secret" />
	</util:list>


	<!-- 登录流程的处理链配置 -->
	<util:list id="web.loginHandlers">
		<ref bean="ticketCookieRetrievingHandler"/>
		<ref bean="loginResolveDomainHandler" if:test="runtime.use_domain=='true'"/>
		<ref bean="credentialsLoginHandler"/>
		<ref bean="windowsNTLMLoginHandler" if:test="runtime.user_mode.contains('ad')"/>
		<ref bean="ssoConnectorHandler" if:test="runtime.sso_connect_enable=='true'"/>
		<ref bean="authenticateLoginHandler"/>
		<ref bean="logoutPreviousUserHandler"/>
		<ref bean="gotoLoginFormHandler"/>
		<ref bean="ticketCookieWritingHandler"/>
		<ref bean="grantServiceTicketHandler"/>
		<ref if:test="runtime.rm_enable=='true'" bean="grantRemoteAppTokenHandler" />
		<ref if:test="runtime.login_log_enable=='true'" bean="loginLogHandler"/>
	</util:list>
	<util:list id="desktop.loginHandlers">
		<ref bean="ticketCookieRetrievingHandler"/>
		<ref bean="loginResolveDomainHandler" if:test="runtime.use_domain=='true'"/>
		<ref bean="credentialsLoginHandler"/>
		<ref bean="authenticateLoginHandler"/>
		<ref bean="grantServiceTicketHandler"/>
		<ref bean="grantAppSpecifiedSecretHandler" if:test="runtime.spec_secret_enable=='true'"/>
		<ref bean="loginLogHandler" if:test="runtime.login_log_enable=='true'"/>
		<ref bean="responseParamsHandler" if:test="runtime.use_domain=='true'"/>
	</util:list>

    <!-- 登录入口，第三方登录接入可以在这里扩展（bingo.sso.core.login.ILoginEntryProcessor） -->
    <util:list id="loginEntryProcessors">
		<ref bean="weiXinLoginHandler" if:test="runtime.weixin_login=='true'"/>
	</util:list>

    <!-- 效验登录处理链 -->
    <util:list id="checkAuthenticationHandlers">
		<ref bean="validateServiceTicketCheckAuthenticationHandler"/>
		<ref if:test="runtime.rm_enable=='true'" bean="grantRemoteAppTokenWhenCheckAuthHandler"/>
	</util:list>

	<!-- 注销流程的处理链配置 -->
	<util:list id="web.logoutHandlers">
		<ref bean="serverLogoutHandler"/>
		<ref bean="clientLogoutHandler"/>
		<ref if:test="runtime.login_log_enable=='true'" bean="logoutLogHandler"/>
	</util:list>
	<util:list id="desktop.logoutHandlers">
		<ref bean="serverLogoutHandler"/>
		<ref if:test="runtime.login_log_enable=='true'" bean="logoutLogHandler"/>
	</util:list>

    <bean id="logoutUrlManager" class="bingo.sso.core.logout.OnDemandLogoutUrlManager">
    </bean>

	<!-- 当不需要应用接入控制时，配置为Mock -->
	<if:condition test="runtime.client_host_mode=='mock'">
		<bean id="clientHostManager" class="bingo.sso.core.client.MockClientHostManager"/>
    	<bean id="clientHostAccesser" class="bingo.sso.core.client.MockClientHostAccesser"/>
	</if:condition>
	<if:condition test="runtime.client_host_mode=='mem'">
		<bean id="clientHostManager" class="bingo.sso.core.client.MemClientHostManager">
			<property name="clientHostMap" ref="clientHostMap" />
	    </bean>
		<util:map id="clientHostMap"></util:map>
	    <bean id="clientHostAccesser" class="bingo.sso.core.client.ClientHostAccesser"
	    	p:clientHostManager-ref="clientHostManager" />
	</if:condition>
	<if:condition test="runtime.client_host_mode=='db'">
		<bean id="clientHostManager" class="bingo.sso.core.client.DBClientHostManager" />
	    <bean id="clientHostAccesser" class="bingo.sso.core.client.ClientHostAccesser"
	    	p:clientHostManager-ref="clientHostManager" />
	</if:condition>

    <!-- appSpecifiedSecretManager 必须为持久化模式，这里需要执行对应的数据库脚本 -->
    <bean if:test="runtime.spec_secret_enable=='true'" id="appSpecifiedSecretManager" class="bingo.sso.core.appspecifiedsecret.DBAppSpecifiedSecretManager" />


    <!-- 防钓鱼漏洞，设置可以跳转的外部站点地址 -->
    <if:condition test="runtime.validate_return_url=='true'">
    	<bean id="serverSignOnUrlValidator" class="bingo.sso.core.validate.ServerSignOnUrlValidator">
			<property name="allowSiteBaseUrl">
				<list>
					<!-- Moss接入、OWA接入 -->
					<value></value>
				</list>
			</property>
	    </bean>
	    <bean id="singleSignOnUrlValidator" class="bingo.sso.core.validate.SingleSignOnUrlValidator">
			<property name="allowSiteBaseUrl">
				<list>
					<!-- 走SSO协议进行应用接入 -->
					<value>http://yohn.marco.com:8080/app</value>
				</list>
			</property>
	    </bean>
    </if:condition>

</beans>